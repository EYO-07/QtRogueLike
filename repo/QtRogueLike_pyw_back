"""
[ Rogue Like ] { PyQt5 }
I := Imports 
Q := PyQt Main Window 'Game' Setup and Start the Application 
1. /start.pyw || I | Game : QGraphicsView {}? | Q 
-> Game {} || $ scene, tile_size, grid_width, grid_height | draw_grid () | resizeEvent () 
2. /items.py || Item {}? | Container {}? 
-> Item {} || $ name, description, weight 
-> Container {} || $ (list) items | add_item () | remove_item () 
3. /mapping.py || Tile : Container {}? | Map {}? 
-> Tile {} || $ (bool) walkable | $ (QPixmap) sprite | get_default_pixmap () 
-> Map {} || $ (list) grid | generate() | get_tile (x,y)
4. /living.py || Character : Container {}? | Player : Character {}? | Enemy : Character {}? 
-> Character {} || $ name, hp, x, y | move(dx,dy)
-> Player {} || $ class_name 
-> Enemy {} || $ type 
"""

import sys
from PyQt5.QtWidgets import QApplication, QGraphicsView, QGraphicsScene, QGraphicsPixmapItem
from PyQt5.QtGui import QPixmap
from PyQt5.QtCore import QRectF,Qt

class RogueLikeView(QGraphicsView):
    def __init__(self):
        super().__init__()

        # Cria a cena onde os tiles vão ficar
        self.scene = QGraphicsScene(self)
        self.setScene(self.scene)

        # Tamanho do tile
        self.tile_size = 32

        # Exemplo de grid (5x5)
        self.grid_width = 20
        self.grid_height = 20

        # Carrega a imagem do tile (você pode carregar diferentes tipos depois)
        self.tile_pixmap = QPixmap("grass_tile.webp").scaled(self.tile_size, self.tile_size)  # coloque um caminho válido
        
        self.draw_grid()

    def draw_grid(self):
        for y in range(self.grid_height):
            for x in range(self.grid_width):
                tile = QGraphicsPixmapItem(self.tile_pixmap)
                tile.setOffset(x * self.tile_size, y * self.tile_size)
                self.scene.addItem(tile)

        self.setSceneRect(QRectF(0, 0, self.grid_width * self.tile_size, self.grid_height * self.tile_size))
    
    def resizeEvent(self, event):
        super().resizeEvent(event)
        self.fitInView(self.scene.sceneRect(), Qt.KeepAspectRatio)

if __name__ == '__main__':
    app = QApplication(sys.argv)
    view = RogueLikeView()
    view.setWindowTitle("Meu RogueLike")
    #view.setFixedSize(view.sceneRect().size().toSize())
    view.show()
    sys.exit(app.exec_())
